// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`build_components multiple components 1`] = `
Object {
  "output": Array [
    Object {
      "code": "import _extends from '@babel/runtime/helpers/extends';
import React from 'react';
import View from '@tarojs/components-rn/dist/components/View';
import Text from '@tarojs/components-rn/dist/components/Text';
import { Dimensions, StyleSheet } from 'react-native';

// 一般app 只有竖屏模式，所以可以只获取一次 width
const deviceWidthDp = Dimensions.get('window').width;
const uiWidthPx = 375;

function scalePx2dp (uiElementPx) {
  return uiElementPx * deviceWidthDp / uiWidthPx
}

var indexScssStyleSheet = StyleSheet.create({
  \\"cellGroup\\": {
    \\"backgroundColor\\": \\"white\\",
    \\"borderRadius\\": scalePx2dp(10)
  },
  \\"cellItem\\": {
    \\"display\\": \\"flex\\",
    \\"flexDirection\\": \\"row\\",
    \\"justifyContent\\": \\"space-between\\",
    \\"paddingLeft\\": scalePx2dp(15),
    \\"paddingRight\\": scalePx2dp(15),
    \\"height\\": scalePx2dp(49)
  },
  \\"cellItem--care\\": {
    \\"height\\": scalePx2dp(64)
  },
  \\"cellItem__title\\": {
    \\"color\\": \\"#333\\",
    \\"fontWeight\\": \\"bold\\"
  },
  \\"cellItem__line\\": {
    \\"height\\": scalePx2dp(0.5),
    \\"backgroundColor\\": \\"#f4f4f4\\"
  }
});

function _mergeEleStyles(){return [].concat.apply([],arguments).reduce((pre,cur)=>Object.assign(pre,cur),{});}var _styleSheet=indexScssStyleSheet;function Cell(_ref){var children=_ref.children,style=_ref.style;var childs=Array.isArray(children)?children:[children];return React.createElement(View,{style:_mergeEleStyles(_styleSheet[\\"cellGroup\\"],_extends({},style))},childs.map(function(it,i){return [it].concat(i===children.length-1?[]:React.createElement(View,{key:\\"line-\\"+i,style:_styleSheet[\\"cellItem__line\\"]}));}));}function Item(_ref2){var title=_ref2.title,children=_ref2.children,style=_ref2.style;return React.createElement(View,{style:_mergeEleStyles(_styleSheet[\\"cellItem\\"],_extends({},style))},React.createElement(Text,{style:_styleSheet[\\"cellItem__title\\"]},title),React.createElement(View,{style:_styleSheet[\\"cellItem__content\\"]},children));}Cell.Item=Item;

export { Cell as default };
",
      "dynamicImports": Array [],
      "exports": Array [
        "default",
      ],
      "facadeModuleId": "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/cell/index.tsx",
      "fileName": "components/cell/index.js",
      "implicitlyLoadedBefore": Array [],
      "importedBindings": Object {
        "@babel/runtime/helpers/extends": Array [
          "default",
        ],
        "@tarojs/components-rn/dist/components/Text": Array [
          "default",
        ],
        "@tarojs/components-rn/dist/components/View": Array [
          "default",
        ],
        "react": Array [
          "default",
        ],
        "react-native": Array [
          "Dimensions",
          "StyleSheet",
        ],
      },
      "imports": Array [
        "@babel/runtime/helpers/extends",
        "react",
        "@tarojs/components-rn/dist/components/View",
        "@tarojs/components-rn/dist/components/Text",
        "react-native",
      ],
      "isDynamicEntry": false,
      "isEntry": true,
      "isImplicitEntry": false,
      "map": null,
      "modules": Object {
        "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/cell/index.scss": Object {
          "code": "// 一般app 只有竖屏模式，所以可以只获取一次 width
const deviceWidthDp = Dimensions.get('window').width;
const uiWidthPx = 375;

function scalePx2dp (uiElementPx) {
  return uiElementPx * deviceWidthDp / uiWidthPx
}

var indexScssStyleSheet = StyleSheet.create({
  \\"cellGroup\\": {
    \\"backgroundColor\\": \\"white\\",
    \\"borderRadius\\": scalePx2dp(10)
  },
  \\"cellItem\\": {
    \\"display\\": \\"flex\\",
    \\"flexDirection\\": \\"row\\",
    \\"justifyContent\\": \\"space-between\\",
    \\"paddingLeft\\": scalePx2dp(15),
    \\"paddingRight\\": scalePx2dp(15),
    \\"height\\": scalePx2dp(49)
  },
  \\"cellItem--care\\": {
    \\"height\\": scalePx2dp(64)
  },
  \\"cellItem__title\\": {
    \\"color\\": \\"#333\\",
    \\"fontWeight\\": \\"bold\\"
  },
  \\"cellItem__line\\": {
    \\"height\\": scalePx2dp(0.5),
    \\"backgroundColor\\": \\"#f4f4f4\\"
  }
});",
          "originalLength": 418,
          "removedExports": Array [],
          "renderedExports": Array [
            "default",
          ],
          "renderedLength": 767,
        },
        "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/cell/index.tsx": Object {
          "code": "function _mergeEleStyles(){return [].concat.apply([],arguments).reduce((pre,cur)=>Object.assign(pre,cur),{});}var _styleSheet=indexScssStyleSheet;function Cell(_ref){var children=_ref.children,style=_ref.style;var childs=Array.isArray(children)?children:[children];return React.createElement(View,{style:_mergeEleStyles(_styleSheet[\\"cellGroup\\"],_extends({},style))},childs.map(function(it,i){return [it].concat(i===children.length-1?[]:React.createElement(View,{key:\\"line-\\"+i,style:_styleSheet[\\"cellItem__line\\"]}));}));}function Item(_ref2){var title=_ref2.title,children=_ref2.children,style=_ref2.style;return React.createElement(View,{style:_mergeEleStyles(_styleSheet[\\"cellItem\\"],_extends({},style))},React.createElement(Text,{style:_styleSheet[\\"cellItem__title\\"]},title),React.createElement(View,{style:_styleSheet[\\"cellItem__content\\"]},children));}Cell.Item=Item;",
          "originalLength": 891,
          "removedExports": Array [],
          "renderedExports": Array [
            "default",
          ],
          "renderedLength": 869,
        },
      },
      "name": "components/cell/index",
      "referencedFiles": Array [],
      "type": "chunk",
    },
    Object {
      "code": "import React from 'react';
import { navigateBack } from '@tarojs/taro-rn/dist/api';
import View from '@tarojs/components-rn/dist/components/View';
import Text from '@tarojs/components-rn/dist/components/Text';
import Image from '@tarojs/components-rn/dist/components/Image';
import { Dimensions, StyleSheet } from 'react-native';

var iconBack = require('../../assets/icon_back-541a82be.webp');

// 一般app 只有竖屏模式，所以可以只获取一次 width
const deviceWidthDp = Dimensions.get('window').width;
const uiWidthPx = 375;

function scalePx2dp (uiElementPx) {
  return uiElementPx * deviceWidthDp / uiWidthPx
}

var indexScssStyleSheet = StyleSheet.create({
  \\"navbar\\": {
    \\"display\\": \\"flex\\",
    \\"flexDirection\\": \\"row\\",
    \\"justifyContent\\": \\"space-between\\",
    \\"alignItems\\": \\"center\\",
    \\"width\\": scalePx2dp(375),
    \\"height\\": scalePx2dp(50),
    \\"backgroundColor\\": \\"white\\"
  },
  \\"navbar-title-text\\": {
    \\"fontSize\\": scalePx2dp(19),
    \\"color\\": \\"#000\\"
  },
  \\"icon-back\\": {
    \\"width\\": scalePx2dp(19),
    \\"height\\": scalePx2dp(19)
  },
  \\"navbar-leftElement\\": {
    \\"width\\": scalePx2dp(50),
    \\"display\\": \\"flex\\",
    \\"flexDirection\\": \\"row\\",
    \\"justifyContent\\": \\"center\\",
    \\"alignItems\\": \\"center\\"
  },
  \\"navbar-rightElement\\": {
    \\"width\\": scalePx2dp(50),
    \\"display\\": \\"flex\\",
    \\"flexDirection\\": \\"row\\",
    \\"justifyContent\\": \\"center\\",
    \\"alignItems\\": \\"center\\"
  }
});

console.log('rn resolve');

var _styleSheet=indexScssStyleSheet;console.log('process.env.TARO_ENV',\\"rn\\");function Navbar(props){var title=props.title,rightElement=props.rightElement;return React.createElement(View,{style:_styleSheet[\\"navbar\\"]},React.createElement(View,{style:_styleSheet[\\"navbar-leftElement\\"]},React.createElement(Image,{src:iconBack,onClick:function back(){return navigateBack();},style:_styleSheet[\\"icon-back\\"]})),React.createElement(View,{style:_styleSheet[\\"navbar-title\\"]},typeof title==='string'?React.createElement(Text,{style:_styleSheet[\\"navbar-title-text\\"]},title):title),React.createElement(View,{style:_styleSheet[\\"navbar-rightElement\\"]},rightElement));}

export { Navbar as default };
",
      "dynamicImports": Array [],
      "exports": Array [
        "default",
      ],
      "facadeModuleId": "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/navbar/index.tsx",
      "fileName": "components/navbar/index.js",
      "implicitlyLoadedBefore": Array [],
      "importedBindings": Object {
        "@tarojs/components-rn/dist/components/Image": Array [
          "default",
        ],
        "@tarojs/components-rn/dist/components/Text": Array [
          "default",
        ],
        "@tarojs/components-rn/dist/components/View": Array [
          "default",
        ],
        "@tarojs/taro-rn/dist/api": Array [
          "navigateBack",
        ],
        "react": Array [
          "default",
        ],
        "react-native": Array [
          "Dimensions",
          "StyleSheet",
        ],
      },
      "imports": Array [
        "react",
        "@tarojs/taro-rn/dist/api",
        "@tarojs/components-rn/dist/components/View",
        "@tarojs/components-rn/dist/components/Text",
        "@tarojs/components-rn/dist/components/Image",
        "react-native",
      ],
      "isDynamicEntry": false,
      "isEntry": true,
      "isImplicitEntry": false,
      "map": null,
      "modules": Object {
        "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/navbar/icon_back.webp": Object {
          "code": "var iconBack = require('../../assets/icon_back-541a82be.webp');",
          "originalLength": 52,
          "removedExports": Array [],
          "renderedExports": Array [
            "default",
          ],
          "renderedLength": 52,
        },
        "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/navbar/index.scss": Object {
          "code": "// 一般app 只有竖屏模式，所以可以只获取一次 width
const deviceWidthDp = Dimensions.get('window').width;
const uiWidthPx = 375;

function scalePx2dp (uiElementPx) {
  return uiElementPx * deviceWidthDp / uiWidthPx
}

var indexScssStyleSheet = StyleSheet.create({
  \\"navbar\\": {
    \\"display\\": \\"flex\\",
    \\"flexDirection\\": \\"row\\",
    \\"justifyContent\\": \\"space-between\\",
    \\"alignItems\\": \\"center\\",
    \\"width\\": scalePx2dp(375),
    \\"height\\": scalePx2dp(50),
    \\"backgroundColor\\": \\"white\\"
  },
  \\"navbar-title-text\\": {
    \\"fontSize\\": scalePx2dp(19),
    \\"color\\": \\"#000\\"
  },
  \\"icon-back\\": {
    \\"width\\": scalePx2dp(19),
    \\"height\\": scalePx2dp(19)
  },
  \\"navbar-leftElement\\": {
    \\"width\\": scalePx2dp(50),
    \\"display\\": \\"flex\\",
    \\"flexDirection\\": \\"row\\",
    \\"justifyContent\\": \\"center\\",
    \\"alignItems\\": \\"center\\"
  },
  \\"navbar-rightElement\\": {
    \\"width\\": scalePx2dp(50),
    \\"display\\": \\"flex\\",
    \\"flexDirection\\": \\"row\\",
    \\"justifyContent\\": \\"center\\",
    \\"alignItems\\": \\"center\\"
  }
});",
          "originalLength": 470,
          "removedExports": Array [],
          "renderedExports": Array [
            "default",
          ],
          "renderedLength": 977,
        },
        "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/navbar/index.tsx": Object {
          "code": "var _styleSheet=indexScssStyleSheet;console.log('process.env.TARO_ENV',\\"rn\\");function Navbar(props){var title=props.title,rightElement=props.rightElement;return React.createElement(View,{style:_styleSheet[\\"navbar\\"]},React.createElement(View,{style:_styleSheet[\\"navbar-leftElement\\"]},React.createElement(Image,{src:iconBack,onClick:function back(){return navigateBack();},style:_styleSheet[\\"icon-back\\"]})),React.createElement(View,{style:_styleSheet[\\"navbar-title\\"]},typeof title==='string'?React.createElement(Text,{style:_styleSheet[\\"navbar-title-text\\"]},title):title),React.createElement(View,{style:_styleSheet[\\"navbar-rightElement\\"]},rightElement));}",
          "originalLength": 992,
          "removedExports": Array [],
          "renderedExports": Array [
            "default",
          ],
          "renderedLength": 654,
        },
        "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/navbar/resolver.rn.ts": Object {
          "code": "console.log('rn resolve');",
          "originalLength": 26,
          "removedExports": Array [],
          "renderedExports": Array [],
          "renderedLength": 26,
        },
      },
      "name": "components/navbar/index",
      "referencedFiles": Array [
        "assets/icon_back-541a82be.webp",
      ],
      "type": "chunk",
    },
    Object {
      "fileName": "assets/icon_back-541a82be.webp",
      "isAsset": true,
      "name": "icon_back.webp",
      "source": Object {
        "data": Array [
          82,
          73,
          70,
          70,
          172,
          0,
          0,
          0,
          87,
          69,
          66,
          80,
          86,
          80,
          56,
          76,
          159,
          0,
          0,
          0,
          47,
          48,
          192,
          11,
          16,
          103,
          96,
          42,
          146,
          141,
          125,
          51,
          126,
          53,
          144,
          79,
          255,
          4,
          212,
          48,
          21,
          201,
          198,
          190,
          25,
          191,
          26,
          200,
          167,
          127,
          2,
          76,
          69,
          178,
          177,
          111,
          198,
          175,
          6,
          242,
          233,
          159,
          0,
          53,
          145,
          36,
          41,
          231,
          223,
          220,
          73,
          184,
          136,
          158,
          34,
          230,
          15,
          192,
          238,
          126,
          4,
          248,
          36,
          130,
          145,
          36,
          255,
          63,
          194,
          238,
          46,
          85,
          21,
          119,
          55,
          205,
          204,
          2,
          155,
          218,
          218,
          155,
          252,
          19,
          189,
          247,
          21,
          63,
          93,
          66,
          36,
          224,
          32,
          18,
          192,
          66,
          148,
          80,
          141,
          101,
          234,
          9,
          99,
          68,
          255,
          133,
          4,
          137,
          6,
          190,
          128,
          194,
          159,
          236,
          13,
          14,
          179,
          21,
          98,
          54,
          207,
          29,
          86,
          243,
          252,
          96,
          54,
          119,
          153,
          221,
          126,
          181,
          59,
          245,
          97,
          11,
          186,
          60,
          95,
          35,
          182,
          48,
          229,
          251,
          249,
          32,
          96,
          134,
          0,
          43,
          125,
          192,
          26,
          38,
          192,
          124,
          8,
          18,
          7,
          0,
        ],
        "type": "Buffer",
      },
      "type": "asset",
    },
  ],
}
`;

exports[`build_components single component 1`] = `
Object {
  "output": Array [
    Object {
      "code": "import _extends from '@babel/runtime/helpers/extends';
import React from 'react';
import View from '@tarojs/components-rn/dist/components/View';
import Text from '@tarojs/components-rn/dist/components/Text';
import { Dimensions, StyleSheet } from 'react-native';

// 一般app 只有竖屏模式，所以可以只获取一次 width
const deviceWidthDp = Dimensions.get('window').width;
const uiWidthPx = 375;

function scalePx2dp (uiElementPx) {
  return uiElementPx * deviceWidthDp / uiWidthPx
}

var indexScssStyleSheet = StyleSheet.create({
  \\"cellGroup\\": {
    \\"backgroundColor\\": \\"white\\",
    \\"borderRadius\\": scalePx2dp(10)
  },
  \\"cellItem\\": {
    \\"display\\": \\"flex\\",
    \\"flexDirection\\": \\"row\\",
    \\"justifyContent\\": \\"space-between\\",
    \\"paddingLeft\\": scalePx2dp(15),
    \\"paddingRight\\": scalePx2dp(15),
    \\"height\\": scalePx2dp(49)
  },
  \\"cellItem--care\\": {
    \\"height\\": scalePx2dp(64)
  },
  \\"cellItem__title\\": {
    \\"color\\": \\"#333\\",
    \\"fontWeight\\": \\"bold\\"
  },
  \\"cellItem__line\\": {
    \\"height\\": scalePx2dp(0.5),
    \\"backgroundColor\\": \\"#f4f4f4\\"
  }
});

function _mergeEleStyles(){return [].concat.apply([],arguments).reduce((pre,cur)=>Object.assign(pre,cur),{});}var _styleSheet=indexScssStyleSheet;function Cell(_ref){var children=_ref.children,style=_ref.style;var childs=Array.isArray(children)?children:[children];return React.createElement(View,{style:_mergeEleStyles(_styleSheet[\\"cellGroup\\"],_extends({},style))},childs.map(function(it,i){return [it].concat(i===children.length-1?[]:React.createElement(View,{key:\\"line-\\"+i,style:_styleSheet[\\"cellItem__line\\"]}));}));}function Item(_ref2){var title=_ref2.title,children=_ref2.children,style=_ref2.style;return React.createElement(View,{style:_mergeEleStyles(_styleSheet[\\"cellItem\\"],_extends({},style))},React.createElement(Text,{style:_styleSheet[\\"cellItem__title\\"]},title),React.createElement(View,{style:_styleSheet[\\"cellItem__content\\"]},children));}Cell.Item=Item;

export { Cell as default };
",
      "dynamicImports": Array [],
      "exports": Array [
        "default",
      ],
      "facadeModuleId": "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/cell/index.tsx",
      "fileName": "index.js",
      "implicitlyLoadedBefore": Array [],
      "importedBindings": Object {
        "@babel/runtime/helpers/extends": Array [
          "default",
        ],
        "@tarojs/components-rn/dist/components/Text": Array [
          "default",
        ],
        "@tarojs/components-rn/dist/components/View": Array [
          "default",
        ],
        "react": Array [
          "default",
        ],
        "react-native": Array [
          "Dimensions",
          "StyleSheet",
        ],
      },
      "imports": Array [
        "@babel/runtime/helpers/extends",
        "react",
        "@tarojs/components-rn/dist/components/View",
        "@tarojs/components-rn/dist/components/Text",
        "react-native",
      ],
      "isDynamicEntry": false,
      "isEntry": true,
      "isImplicitEntry": false,
      "map": null,
      "modules": Object {
        "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/cell/index.scss": Object {
          "code": "// 一般app 只有竖屏模式，所以可以只获取一次 width
const deviceWidthDp = Dimensions.get('window').width;
const uiWidthPx = 375;

function scalePx2dp (uiElementPx) {
  return uiElementPx * deviceWidthDp / uiWidthPx
}

var indexScssStyleSheet = StyleSheet.create({
  \\"cellGroup\\": {
    \\"backgroundColor\\": \\"white\\",
    \\"borderRadius\\": scalePx2dp(10)
  },
  \\"cellItem\\": {
    \\"display\\": \\"flex\\",
    \\"flexDirection\\": \\"row\\",
    \\"justifyContent\\": \\"space-between\\",
    \\"paddingLeft\\": scalePx2dp(15),
    \\"paddingRight\\": scalePx2dp(15),
    \\"height\\": scalePx2dp(49)
  },
  \\"cellItem--care\\": {
    \\"height\\": scalePx2dp(64)
  },
  \\"cellItem__title\\": {
    \\"color\\": \\"#333\\",
    \\"fontWeight\\": \\"bold\\"
  },
  \\"cellItem__line\\": {
    \\"height\\": scalePx2dp(0.5),
    \\"backgroundColor\\": \\"#f4f4f4\\"
  }
});",
          "originalLength": 418,
          "removedExports": Array [],
          "renderedExports": Array [
            "default",
          ],
          "renderedLength": 767,
        },
        "/Users/biorz/workspace/taro/packages/taro-rn-runner/__tests__/mock/src/components/cell/index.tsx": Object {
          "code": "function _mergeEleStyles(){return [].concat.apply([],arguments).reduce((pre,cur)=>Object.assign(pre,cur),{});}var _styleSheet=indexScssStyleSheet;function Cell(_ref){var children=_ref.children,style=_ref.style;var childs=Array.isArray(children)?children:[children];return React.createElement(View,{style:_mergeEleStyles(_styleSheet[\\"cellGroup\\"],_extends({},style))},childs.map(function(it,i){return [it].concat(i===children.length-1?[]:React.createElement(View,{key:\\"line-\\"+i,style:_styleSheet[\\"cellItem__line\\"]}));}));}function Item(_ref2){var title=_ref2.title,children=_ref2.children,style=_ref2.style;return React.createElement(View,{style:_mergeEleStyles(_styleSheet[\\"cellItem\\"],_extends({},style))},React.createElement(Text,{style:_styleSheet[\\"cellItem__title\\"]},title),React.createElement(View,{style:_styleSheet[\\"cellItem__content\\"]},children));}Cell.Item=Item;",
          "originalLength": 891,
          "removedExports": Array [],
          "renderedExports": Array [
            "default",
          ],
          "renderedLength": 869,
        },
      },
      "name": "index",
      "referencedFiles": Array [],
      "type": "chunk",
    },
  ],
}
`;
